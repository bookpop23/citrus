services:

  postgresql:
    image: docker.io/library/postgres:16-alpine
    # healthcheck:
      # test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      # start_period: 120s
      # interval: 30s
      # retries: 5
      # timeout: 5s
    volumes:
      - $DOCKERDIR/appdata/authentik/database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    secrets:
      - pg_pass
    networks:
      - traefik-public
    deploy:  
      #mode: replicated
      #replicas: 1
      placement:
        constraints: [node.hostname == blood-orange]
          #- [node.role == manager]

  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    # healthcheck:
      # test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      # start_period: 120s
      # interval: 30s
      # retries: 5
      # timeout: 3s
    volumes:
      - $DOCKERDIR/appdata/authentik/redis:/data
    networks:
      - traefik-public

  server:
    image: ghcr.io/goauthentik/server:latest
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS:?database password required}
      AUTHENTIK_SECRET_KEY: "file:///run/secrets/authentik_secret_key"
    secrets:
      - pg_pass
      - authentik_secret_key
    depends_on:
      - postgresql
      - redis
      - worker
    volumes:
      - $DOCKERDIR/appdata/authentik/media:/media
      - $DOCKERDIR/appdata/authentik/custom-templates:/templates
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.authentik.rule=Host(`auth.$DOMAIN`)
        - traefik.http.routers.authentik.entrypoints=websecure
        - traefik.http.routers.authentik.tls=true
        - traefik.http.routers.authentik.service=authentik
        - traefik.http.services.authentik.loadbalancer.server.port=9000

  worker:
    image: ghcr.io/goauthentik/server:2023.5.1
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS:?database password required}
      AUTHENTIK_SECRET_KEY: "file:///run/secrets/authentik_secret_key"
    secrets:
      - pg_pass
      - authentik_secret_key
    volumes:
      - $DOCKERDIR/appdata/authentik/media:/media
      - $DOCKERDIR/appdata/authentik/certs:/certs
      - $DOCKERDIR/appdata/authentik/custom-templates:/templates
    networks:
      - traefik-public
    depends_on:
      - postgresql
      - redis
secrets:
  pg_pass:
    external: true
  authentik_secret_key:
    external: true

networks:
  traefik-public:
    external: true