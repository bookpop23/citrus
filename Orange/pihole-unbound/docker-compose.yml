services:
  unbound:
    image: sgaduuw/unbound:latest
    deploy:
      mode: global
    networks:
      - swarm-network
    volumes:
     - $DOCKERDIR/appdata/pihole/unbound:/opt/unbound/etc/unbound/:rw
    environment:
      - UNBOUND_CACHEDB_BACKEND=redis
    healthcheck:
      test: ["CMD", "drill", "@127.0.0.1", "dnssec.works"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
  pihole:
    image: pihole/pihole:latest
    hostname: pihole
    networks:
      - swarm-network  # Allow Swarm services to use Pi-hole as DNS
    ports:
      - target: 53
        published: 53
        protocol: tcp
        mode: ingress
      - target: 53
        published: 53
        protocol: udp
        mode: ingress
      - target: 80
        published: 8091
        protocol: tcp
        mode: ingress
    environment:
      TZ: $TZ
      FTLCONF_webserver_api_password:
      FTLCONF_dns_upstreams: '127.0.0.11'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_dns_dnssec: 'true'
      FTLCONF_dns_revserver: 'true,192.168.0.0/24,192.168.1.1#53,$HOSTNAME.$DOMAIN'
      FTLCONF_BLOCK_ICLOUD_PR: "false"
    depends_on:
      - unbound
    volumes:
      - $DOCKERDIR/appdata/pihole/pihole-data:/etc/pihole/
      - $DOCKERDIR/appdata/pihole/pihole-dnsmasq:/etc/dnsmasq.d/
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pihole.rule=Host(`pihole.$HOSTNAME.$DOMAIN`)"
        - "traefik.http.routers.pihole.service=pihole"
        - "traefik.http.routers.pihole.entrypoints=websecure"
        - "traefik.http.routers.pihole.tls=true"
        - "traefik.http.routers.pihole.tls.certresolver=cloudflare"
        - "traefik.http.services.pihole.loadbalancer.server.port=80"

        # # Middleware to redirect `/` to `/admin`
        # - "traefik.http.middlewares.pihole-redirect.redirectregex.regex=^https://(.*)/$$"
        # - "traefik.http.middlewares.pihole-redirect.redirectregex.replacement=https://$${1}/admin"
        # - "traefik.http.middlewares.pihole-redirect.redirectregex.permanent=true"

        # # Attach middleware to the router
        # - "traefik.http.routers.pihole.middlewares=pihole-redirect"

networks:
  swarm-network:
    external: true  # This allows Pi-hole to communicate with existing Swarm services
