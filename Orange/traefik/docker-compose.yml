services:
  traefik:
    image: traefik:latest
    cap_add: 
      - NET_BIND_SERVICE
    networks:
      - traefik-public
    # dns:
    #   - 192.168.1.1
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 6379
        published: 6379
        mode: host  # ✅ Redis via Traefik
      - target: 5432
        published: 5432
        mode: host  # ✅ PostgreSQL via Traefik
    # healthcheck:
    #   test: ["CMD-SHELL", "/bin/ash", "-c", "traefik healthcheck"]
    #   start_period: 90s
    #   interval: 30s
    #   retries: 5
    #   timeout: 3s
    secrets:
      - username_password
      - cf_dns_api_token
    environment:
      - TZ=$TZ
      - CF_DNS_API_TOKEN_FILE=/run/secrets/cf_dns_api_token
      - HTPASSWD_FILE=/run/secrets/username_password
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        # Enable Traefik for this service, to make it available in the public network
        - traefik.enable=true

        # Use the traefik-public network (declared below)
        # - traefik.swarm.network=traefik-public

        # admin-auth middleware with HTTP Basic auth

        # Using the environment variables USERNAME and HASHED_PASSWORD
        - traefik.http.middlewares.auth.basicauth.usersfile=/run/secrets/username_password

        # traefik-https the actual router using HTTPS
        - traefik.http.routers.traefik.rule=Host(`traefik.$DOMAIN`)
        - traefik.http.routers.traefik.entrypoints=websecure
        - traefik.http.routers.traefik.tls=true
        - traefik.http.routers.traefik.tls.certresolver=cloudflare

        # Use the special Traefik service api@internal with the web UI/Dashboard
        - traefik.http.routers.traefik.service=api@internal

        # Define the port inside of the Docker service to use
        - traefik.http.services.traefik.loadbalancer.server.port=8080
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "$DOCKERDIR/appdata/traefik/config/traefik.yml:/etc/traefik/traefik.yml"  # traefik.yaml
      - "$DOCKERDIR/appdata/traefik/certs:/certs"                                 # acme.json defined in traefik.yaml
      - "$DOCKERDIR/appdata/traefik/rules:/rules"                                 # Dynamic File Provider directory
      - "$DOCKERDIR/appdata/traefik/logs:/logs"                                   # Logs       

secrets:
  username_password:
    external: true
  cf_dns_api_token:
    external: true

networks:
  traefik-public:
    external: true